##
##  Copyright(c) 2019-2025 Qualcomm Innovation Center, Inc. All Rights Reserved.
##
##  SPDX-License-Identifier: GPL-2.0-or-later
##

# -*- Mode: makefile -*-
#
# Hexagon SoftMMU tests - included from tests/tcg/Makefile
#

HEXAGON_SYSTEM_SRC=$(SRC_PATH)/tests/tcg/hexagon/system

# Set search path for all sources
VPATH 		+= $(HEXAGON_SYSTEM_SRC)

########### Compiling options
# We force -O0 to avoid optimizations that would break the
# libc simplifications we made at min_libc.c
#
CFLAGS=-mv73 -U__linux__ -G0 -nodefaultlibs -nostdlib -static -fno-PIC -O0 -g -Werror
LDFLAGS=-lclang_rt.builtins-hexagon

########### QEMU options
QEMU_BASE_MACHINE=-M V66G_1024 -semihosting-config usefs=$(SRC_PATH)/tests/tcg/hexagon/system
QEMU_OPTS+=-display none

QEMU_OPTS+=$(QEMU_BASE_MACHINE) -kernel

crt0.o: crt0/crt0.S crt0/crt0.inc
crt0_standalone.o: crt0/crt0_standalone.S crt0/crt0.inc
pte.o: crt0/pte.S
min_libc.o: crt0/min_libc.c
tlb.o: crt0/tlb.c

CRT0_OBJS=crt0.o crt0_standalone.o pte.o min_libc.o tlb.o

TESTS_BUILT_WITH_DEFAULT_RULES = \
	semihost \
	mmu_overlap \
	mmu_asids \
	standalone_hw \
	ciad-siad \
	badva \
	vid_reg \
	hvx-multi \
	standalone_vec \
	$()

TESTS += \
	$(TESTS_BUILT_WITH_DEFAULT_RULES) \
	tlb-miss-tlblock \
	$()

$(TESTS_BUILT_WITH_DEFAULT_RULES): $(CRT0_OBJS)

# Build and link the tests
echo-and-run = echo $(1) && $(1)
define build_fn
    @if test "$(3)" = LINK; then extra="$(LDFLAGS)"; else extra=-c; fi && \
    $(call echo-and-run, $(CC) $(CFLAGS) $(1) -o $(2) $$extra)
endef

$(CRT0_OBJS):
	$(call build_fn,$<,$@)
$(TESTS_BUILT_WITH_DEFAULT_RULES):
	$(call build_fn,$^,$@,LINK)

%.o: %.S
	$(call build_fn,$<,$@)
%.o: %.c
	$(call build_fn,$<,$@)

mmu.h: ../hex_test.h

semihost.o: semihost.c strutils.h
semihost: semihost.o
mmu_overlap.o: mmu_overlap.c mmu.h
mmu_overlap: mmu_overlap.o
mmu_asids.o: mmu_asids.c mmu.h
mmu_asids: mmu_asids.o
ciad-siad: ciad-siad.o
standalone_hw: standalone_hw.o monitor_insts.o
vid_reg: vid_reg.o
hvx-multi.o: hvx-multi.c ../hvx_misc.h
hvx-multi: hvx-multi.o
standalone_vec.o: standalone_vec.c cfgtable.h
standalone_vec: standalone_vec.o
badva.o: badva.c ../hex_test.h crt0/hexagon_standalone.h
badva: badva.o

############# Custom build options

standalone_vec.o: CFLAGS+= -mv69 -O2 -mhvx  -fvectorize
hvx-multi.o: CFLAGS+= -O2 -mhvx

# We don't want to link this one with crt0 files
tlb-miss-tlblock: tlb-miss-tlblock.o
	$(CC) $(CFLAGS) $< -o $@ -nostartfiles -Wl,-Ttext,0x9b800000 -Wl,-entry,0x9b800000

############# Custom test rules

run-semihost: semihost
	mkdir -p _semihost_dir
	touch _semihost_dir/fileA _semihost_dir/fileB
	$(call run-test, $<, $(QEMU) --append "arg1 arg2" $(QEMU_OPTS) $< \
		             > $<.stdout)
	$(call quiet-command, grep -q "PASS" $<.stdout, "GREP", "PASS")
